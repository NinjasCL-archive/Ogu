// https://gist.github.com/mbbx6spp/5548937 en Scala traducido a OgÃº
 
module Net.Susanpotter.Algdt
 
trait Order x = {
                
	def execute :: x -> Unit
}

instance Order MarketOrder = {
	
	def execute _ do print! "executing market order\n"
}

instance Order LimitOrder = {
	
	def execute _ do print! "executing limit order\n"

}
  
type Currency = USD | CAD | EUR | GBP
 
class Money(currency:Currency; amount:Int)
 
type Period = Hour | Day | Week | Month
 
class Duty(description, skillRequired:String)
 
class Project(name, description:String; deliverables:[String])
 
class Employee(title:String; salary: Money; duties:[Duty])

class Contractor(rate:Money; period:Period; project: [Project])
 
type Worker = Employee | Contractor
 
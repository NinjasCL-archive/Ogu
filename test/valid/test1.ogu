module Test1

let ackermann m n 
  | m == 0 = n + 1
  | m > 0 and n == 0 = ackermann (m-1) 1
  | m > 0 and n > 0 = ackermann (m-1) (ackermann m (n-1))


let siracusa n : Int
  | n == 1 = 3
  | n % 2 == 0 = siracusa (n / 2)
  | otherwise = siracusa (n*3 + 1)


def inc : Int -> Int

let inc a = a + 1
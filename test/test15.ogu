;; stack mutable en Ogú

;; Un stack s con elementos de tipo e
trait Stackable s e where

  def push!  : s -> e -> !
  def pop!   : s -> e
  def empty? : s -> Bool


;; Un contenedor de elementos tipo e
mut trait MutContainer e where

  var _data : [e] = []   ;; los traits pueden tener variables mutables

;; acá reemplazamos s por (MutContainer e)
instance Stackable (MutContainer e) e where

  let push! stack x = ;;; stack es de tipo MutContainer e, x es de tipo e
      set _data s = x :: _data

  let pop! stack =
      let result = head (_data stack) ;; fallará si _data en stack es [])
      set _data stack = tail (_data stack)
      result

  let empty? stack = null? (_data stack)


type Stack x = Stackable (MutContainer x) x

type IntStack = Stack Int

var stack = new IntStack() ;; las instancias de un trait tienen el contructor ()

push! stack 10
push! stack 20
pop! stack ; <- retorna 20




def	areaCilindro :: a:Float => a -> a -> a
def	areaCilindro r h = 
   let areaLateral := 2 * pi * r * h
   	   areaBase := pi * r ^ 2
   in areaLateral + 2 * areaBase 

def test () {
 4 * (let a = 9 in a + 1) + 2 // = 42

 [let square = x * x in (square 5, square 3, square 2)]

 (let a = 100; b = 200; c = 300 in a*b*c)

 (let a = 100 and b = 200 and c = 300 in a*b*c)

 }
;; uses java integration
module StdLib.IO


exports println!, readln!

#{extern "jvm" "java/io"}
uses Java.IO

#{extern "jvm" "java/lang"}
uses Java.Lang

#{extern "jvm" "java/lang/System"}
alias System = Java.Lang.System


#{extern "jvm" "java/lang/System.in:Ljava/io/InputStream;"}  ;; because in is a reserved word in OgÃº
alias _stdIn = System._In

alias BufferedReader = Java.IO.BufferedReader
alias InputStreamReader = Java.IO.InputStreamReader
alias PrintStream = Java.IO.PrintStream

#{extern "jvm" "java/lang/System.out:Ljava/io/PrintStream;"}
val _stdOut : PrintStream = System.out

#{extern "jvm" "java/io/PrintStream.println:(Ljava/lang/String;)V"}
def _println : PrintStream -> String -> ()

def println! : String -> ()
let println! str =
    _println stdOut str
    ()

val _stdIn = BufferedReader(InputStreamReader(_stdIn))

#{extern "jvm" "/java/io/BufferedReader.readLine:()Ljava/lang/String"}
def _readln : BufferedReader -> String

def readln! : -> String
let readln! =
    readLine _stdIn


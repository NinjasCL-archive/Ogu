
trait Shape

    def area self

trait Widget

     def draw! self

     def move! self x y

trait Origin

     def getX self
     def getY self

class Circle (x, y, radius)

  extends Shape

      def area self = pi * (self.radius ^ 2)

  extends Widget

      def draw! self = println! "draw a circle at (" x ", " y ") with radius " radius

      def move! self new-x new-y =
            Circle(new-x, new-y, self.radius)

  extends Origin

     def getX self = x

     def getY self = y


class Rectangle (x,  y, width, height)


extends Rectangle with Shape

     def area self = (.width self) * (.height self)

extends Rectangle  with Widget

     def draw! self = println! "draw a rectangle at (" self.x  ", " self.y   ") with width = " (.width self) " and height = " (.height self)

     def move! self new-x new-y =
           draw! self

def show-area! shape : Rectangle = println! "el area de un rectangulo es " (area shape) " y es de tipo " (typeof shape )

def show-area! shape : Shape = println! "el area es " (area shape) " y es de tipo " (typeof shape )


let cir = Circle(10, 10, 10)
let rec = Rectangle(0,0, 100, 50)

draw! cir

draw! rec

show-area! cir

show-area! rec

(move! cir 20 20)


println!  (getX cir) (getY cir) cir.radius


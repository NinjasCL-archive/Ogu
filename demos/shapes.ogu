
trait Shape is

    def area self

trait Widget is

     def draw! self

     def move! self x y

trait Origin is

     getX self
     getY self

class Circle (var x,  var y, val radius)

  as Shape

      area self = pi * (!self.radius ^ 2)

  as Widget

      def draw! self = println! "draw a circle at (" x ", " y ") with radius " radius

      def move! self new-x new-y = begin
            !x = new-x
            !y = new-y
           draw! self
      end

  as Origin

     def getX self = x

     def getY self = y


class Rectangle( x,  y, width, height)


extend Rectangle

  as Shape

     area self = (.width self) * (.height self)

  as Widget

     draw! self = println! "draw a rectangle at (" !self.x  ", " !self.y   ") with width = " (.width self) " and height = " (.height self)

     def move! self new-x new-y = begin
           draw! self
      end

def show-area! shape : Rectangle = println! "el area de un rectangulo es " (area shape) " y es de tipo " (typeof shape )

def show-area! shape : Shape = println! "el area es " (area shape) " y es de tipo " (typeof shape )


let cir = Circle(10, 10, 10)
let rec = Rectangle(0,0, 100, 50)

draw! cir

draw! rec

show-area! cir

show-area! rec

(move! cir 20 20)


println!  (getX cir) (getY cir) !cir.radius


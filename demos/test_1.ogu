def qs [] = []

def qs (h::t) = 
	qs (l) ++ [h] ++ qs(g) 
	where 
	  l = [x | x <- t,  x <= h]
	  g = [x | x <- t, x > h]


def qs2 (h::t) = 
	let
		l = [x | x <- t, x <= h]
		g = [x | x <- t, x > h]
	in 
		qs (l) ++ [h] ++ qs(g)


def fibo (n:Num) -> Num
    | n == 0 = 1
    | n == 1 = 1
    | otherwise = fibo(n-1)+fibo(n-2)
    
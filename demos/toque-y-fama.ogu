; toque y fama en ogú
uses Math.Random

let toques_y_famas [] _ _ = (0,0)
let toques_y_famas (n::ns) (x::xs) ys
    | n == x = (t, f+1)
    | otherwise = if n in ys then (t+1,f) else (t,f)
    where (t,f) = toques_y_famas ns xs ys

let validar n xs = if (length num) == n then num else []
    where num = if all (isDigit 10) xs then map (toDigit 10) xs |> uniq else []

let tam = 5
let sec = take tam (shuffle [0..9])

println! "Bienvenido a Toque y Fama.\n\
        \==========================\n\n\
        \En este juego debes tratar de adivinar una secuencia de " ++ (show tam) ++ "dígitos generadas por el programa.\n\
        \Para esto ingresas "++ (show tam) ++ " dígitos distintos con el fin de adivinar la secuencia.\n\
        \Si has adivinado correctamente la posición de un dígito se produce una Fama.\n\
        \Si has adivinado uno de los dígitos de la secuencia, pero en una posición distinta se trata de un Toque.\n\n\
        \Ejemplo: Si la secuencia es secuencia: [8, 0, 6, 1, 3] e ingresas 40863, entonces en pantalla aparecerá:\n\
        \tu ingresaste [4, 0, 8, 6, 3]\n\
        \resultado: 2 Toques 2 Famas\n\n\n"

var salir = false
while not salir do
    let accion = inputln! "Ingresa una secuencia de " ++ (show tam) ++ " dígitos distintos (o escribe salir):"
    if accion == "salir" then
        println! "\ngracias por jugar, adios."
        salir <- true
    else
        if let num = validar tam accion then
            println! "tu ingresaste " ++ (show num)
            let (toques, famas) = (toques num sec, famas num sec)
            println! "resultado: " ++ (show (toques - famas)) ++ " Toques " ++ (show famas) ++ "Famas"
            when famas == tam do
                println! "Ganaste! Acertaste al intento " ++ (show intentos) ++ "! La secuencia era " ++ (show sec)
                salir <- true
        else
            println! "error!\n"